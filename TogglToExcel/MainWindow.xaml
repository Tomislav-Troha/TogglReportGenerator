<Window x:Class="TogglToExcel.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:TogglToExcel"
        xmlns:viewmodel="clr-namespace:TogglToExcel.ViewModel"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local1="clr-namespace:TogglToExcel.Converters"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=viewmodel:MainWindowViewModel, IsDesignTimeCreatable=True}"
        Title="Toggl Exporter"
        Height="420" Width="420"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        Icon="appicon.ico"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
        <local1:InverseBooleanToVisibilityConverter x:Key="InverseBoolToVisConverter"/>
    </Window.Resources>

    <Grid>
        <Grid Margin="20">
            <StackPanel>
                <!-- API Token -->
                <StackPanel Orientation="Horizontal" Margin="0 0 0 10" VerticalAlignment="Center">
                    <Label Content="API Token:" Width="80" VerticalAlignment="Center"/>
                    <Grid>
                        <PasswordBox x:Name="pwdApiToken"
                                     Width="240"
                                     Style="{StaticResource MaterialDesignOutlinedPasswordBox}"
                                     Visibility="{Binding IsApiVisible, Converter={StaticResource InverseBoolToVisConverter}}"
                                     PasswordChanged="pwdApiToken_PasswordChanged"/>
                        <TextBox x:Name="txtApiTokenVisible"
                                 Width="240"
                                 Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                 Visibility="{Binding IsApiVisible, Converter={StaticResource BoolToVisConverter}}"
                                 Text="{Binding ApiToken, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                    <Button Style="{StaticResource MaterialDesignIconButton}"
                            Command="{Binding ToggleApiCommand}"
                            Content="👁" Width="30" Margin="10 0 0 0"/>
                </StackPanel>

                <!-- Workspace ID -->
                <TextBox Margin="0 0 0 10"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         materialDesign:HintAssist.Hint="Workspace ID"
                         Text="{Binding WorkspaceId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <!-- Email -->
                <TextBox Margin="0 0 0 10"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         materialDesign:HintAssist.Hint="Email"
                         Text="{Binding Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <!-- Datum Od -->
                <DatePicker Margin="0 0 0 10"
                            Style="{StaticResource MaterialDesignDatePicker}"
                            materialDesign:HintAssist.Hint="Datum od"
                            SelectedDate="{Binding Since, Mode=TwoWay}"/>

                <!-- Datum Do -->
                <DatePicker Margin="0 0 0 20"
                            Style="{StaticResource MaterialDesignDatePicker}"
                            materialDesign:HintAssist.Hint="Datum do"
                            SelectedDate="{Binding Until, Mode=TwoWay}"/>

                <!-- Export Button -->
                <Button Content="Exportaj"
                        Command="{Binding ExportCommand}"
                        Style="{StaticResource MaterialDesignRaisedButton}"
                        Height="40" Width="100"
                        HorizontalAlignment="Center"/>

                <!-- Status kao TextBlock s InputBinding -->
                <TextBlock Text="{Binding StatusText}"
                           Foreground="{Binding StatusBrush}"
                           TextWrapping="Wrap"
                           TextAlignment="Center"
                           Margin="0 20 0 0"
                           Cursor="Hand"
                           TextDecorations="Underline">
                    <TextBlock.InputBindings>
                        <MouseBinding MouseAction="LeftClick"
                                      Command="{Binding OpenFolderCommand}"/>
                    </TextBlock.InputBindings>
                </TextBlock>
            </StackPanel>
        </Grid>

        <TextBlock Text="TT"
                   FontSize="10"
                   Opacity="0.6"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Bottom"
                   Margin="0,0,5,5"
                   Foreground="{DynamicResource MaterialDesignBody}"/>
    </Grid>
</Window>